name: Node.js CI/CD with Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: myapp
      CONTAINER_PORT: 3000

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm install

    - name: Run Tests
      run: |
        # Add your test command if you have tests
        echo "No tests configured"

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest .

    - name: Log in to Docker Hub
      if: secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker Image to Docker Hub
      if: secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD
      run: |
        docker tag $IMAGE_NAME:latest ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest

    - name: Deploy to Remote Server via SSH
      if: ${{ secrets.EC2_HOST && secrets.EC2_USER && secrets.EC2_KEY }}
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest || true
          docker stop $IMAGE_NAME || true
          docker rm $IMAGE_NAME || true
          docker run -d -p 3000:3000 --name $IMAGE_NAME ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest
